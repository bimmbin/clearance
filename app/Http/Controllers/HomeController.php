<?php

namespace App\Http\Controllers;

use App\Models\User;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Crypt;
use Illuminate\Support\Facades\Storage;

class HomeController extends Controller
{
    public function index()
    { 
        
        return view('welcome');
    }

    public function store(Request $request)
    {
        // $user = User::firstWhere('username', 'Carloddss39972022');
        // dd($user->keys->public_key);
        $signatureData = $request->signature;
        
        //  dd($signatureData);

         $signatureData1 = explode(",", $signatureData)[1];
        // $signatureData1 = str_replace('data:image/png;base64,', '', $signatureData);
        $signatureData2 = str_replace(' ', '+', $signatureData1);
        $signatureImage = base64_decode($signatureData2);


        $encryptedImage = Crypt::decrypt('eyJpdiI6IlEyb1hYQW9VUTdmbE5NS21GKzVkU1E9PSIsInZhbHVlIjoicTZXSDFDQzdJbzc2WDlYcmltZWRvMk5Tb2UxclBTOGk0TzRkVXJsTFJLbUdaWllpU1NST0VZb0NqbG1HMkw3Z1JleThGVEhJZlBEOHlNLzFmRk1JWWFGeU04bndtUzYrOHR5Vys4SUgzb1dUWW9hSmx2U09lUHlwYWU0ZWpJWi9oRy9JaGRZUTAwOGlqZ1hVYm5XQ0E2eXA3ckE1Ykl0dGRheVpsZlZUK2J5M2tCY1BwSytjTXM1SzNlWnFoc3hHMGQwWlI5eVljYXljdjQvU0ZrZ0FVa1NFdU5KNzRNaUZXN0tnbXg3MWVDbXBiVEtQMXFWclFGS1I5bnhNODlQVHFHdzdWd1pnTEI1QU1pVTZrY2h0ZEN5S3RjZjZrVmt2ZXlQMGZLM3VkUHVJYmc4VlkzMm1lM2NocHNtR25GdlFaMXhFSzY1K0ZNc0NYQlhmbFR0UG1yMHdmdGtVcjVFTTYyWS83UlhLdUpuSndyVnJPK1dXdUpJSERWVXJlK0VKd2hzK2VVb3B2T2MxaGFxUitSTjZRTVN3MEd6dDI0K0ZqV2ZST0VCeXZ0enZwdkNpanAxWVAzUnRxS1VwWnZWSXdSL3JMMlRNRTRuOTZJQzhPaWtSejhoV242L0M4NUxabEsrbEJrS0VRRWsvSWd3OExucjFEM1V3Q2ppeXVsZm8rVTFFUW85TzU0VlNWRFpsL2d2bGJGcjFHbEdycTRCUlRxOGc1YTVGTGNhNUozb1pSYXdRcFlUYjlRT0xiTDcrbDQ5bEV5cDU2Vi9majN4b3hSaThyakp6Nm9yMmJNYWl3NmFRYkpVYnhBZHJGanFVbXBaTG4yVHVXMGVSalQ3OWF5bGMzOWpmSnhLOVRFUGswTm9mUHErM3Yra0ZkSFB4OW1VR2xUeGlDNExicFhOWFE1WG4xenhJVmQ2U01Da0lrdTdacjFiWmQ3N1JKekpNbGQ3ZWdmTXZ5NDdSamU0OWpsWXJTNXd5NWNaUnhwRjBuc1ZJOS9CdGxEeVZxb085ZUZ4Znl2cVZDd3l2UzIyakhGMGNiQkw5TVJrQldJbjdYQ2xuYjJ3aFE1cHMxSktoT1ZuSS9kVVQ5aFBoWUxQVnJsMTlWdFF4aG0vMnVsK1EzNVpHUWZzeXBMREk0L1NZT041bGhsVGNxR1V5Z3RWWVl5S0N2QmF0bzNuTU84bVpqU3p3K25VckxraDVJeHByaUo2cC8xWXRKZ29MdFJmN0xwUXpPS3hjTGZ3Q3prQmd5THFpN0hxbWt5T05NUFF3RkV4N3FkY0Vhck1xRkgxZ3VIcWt5eWliZEhmbFBVblJ4MHZuOXdxRW1jd0kzdGEzdVh6eGdxT2QvVVJoZFdLN0NTYTVJSUMySmY5TTBLYnpRREFsN2F5aURPOXcxZ3I0R2lyNmdiNHFWQml1bUJ0U21yS2htcFFTdWZoUHl2Y0xidFJWMnhNMFc5TTJ4QmRDc1hJczFDTVhQVzhUNEo0VTZLbE9KL05zcW1qVVl3OW1KY0FqS3REOFRsZTg0L1dNNjYxdTJQbWQ2UEZRNTlFSUx6ZTUrcWxNSVBud3ZqMjk5UVk5bmpWUlMrZ01mOHIwNUx0UWtiR3NLYU5zTjBXeFVnaDV2THQwUEMxU3h4ZVBzS0M1ZUs5OTJkdTlLYXVZdUVmbmJXZWZNOEMzV3BSTWgrb1hEd1IzRHVNS213ak14R3BXVDI3OHNsUnA5RFA1YzVLTFN1UDdWMHZ5U2NTRW1jK2tWd3U0aW1Pcy9kNXZLVTEzNGtGTVR3Yklwc25VYzdUMG9ONmRuUUJ3RXRweTJPdGpMNVZRTWpuTitEeUR4b2RaQWVSUHhoN2pYOG9wRUppeVZpQWljYkswdlJJSUoyNWxqdWRVZmFXc0Eybi8reXp3ZGZIOFE5NDBON203RGtXRWplUkFjdGxsaGtKR1M2VktZWU5yZkhxOXFlUmlnL2hMMy9HekxtRUZ4ZWs5SE1kRE1RWEVvS3ZrdXd2c0M4YWMzMi9Mc2VlbU81VWlIVlA4UEJ4ZjZDU2diMmtsSkE1RTVQR050MEJITFUzZlhNUnpiRUpDWjRiams5VGNVcGJHd0lJZTcwUFBnajdtOXB4ZWN6SVplZDJ3MGZDUTNENG9pcnI0WHhZVlRqY1JnSHBVV082WXZaUkJQM25pakluTG8ybHYzS1J3NDVBL3ZMR3JTMXlhcDc3Mnl6Vys4MHVSTHF0OGU0R1FqTUVqcDYvTEdrZGZHbzN6QnhjTHpLejFFdnp5RmRqOENjTysxb0lJRzBSTG84M0YrMFMyNXl6SmVQdWEzeStnYzYwZEdkanhSaEROWmYwTnhBb0lzQjI2c2tQc2pVay9KRUJJVG9GcGw1N3VTYVdwLzFYSjdvbU15eVoraU1aRE1zU1VoYzdTMFVmQUtNK1FsUk5LY0ZJY2ZFcE50UkNXZGYyWUhMaTBFTllFUFVwSlprdk4rdzkzNlI5amFiWi9tY21MQis0Qm1Qa2k5VEdlWG5kakgvUU1OWnB1VTE1S21CdU5tLzltWnZxMnNLOWNjdHYrUE1hVzNqbnpJMFYzcDV4eUdYamdHOWhWU0Q0bitPNjkzVVN5Z2tKbXBBQlpPWFFZdkpQbUdkSGgzc01nbThOUzhZY3cyRzQxYnYzUWFsbllYQ1RveXJPZmNFYi9jQ0pwQlg5Z1p6OG9wTXdRUFdMdUJzZmtnNVN5RlFnYjcrZkRkaWI5a2NsY3BkYThSWW9icEZ6dGVkekJtb3BBWjhWOHdVYVVFaTY3UjNPUTg5clRKSjdCN2lTZzhDN2VIK01GODY4ek1ZRGlDdkxvUDJrbE9EVDBiVWFnNVlJTm9YbVlxQ3NYdUtLam5WVUxON0pOM2F6dFJZSHV4dGpLUjMxUnVDVW5HQVBoMWlKQWxQN0J6RExUOUQ1dlpaWk5qUlBuUFhjUHlTNnA2ek10VWVQZHBCQ2hiMGYveUtLUGZyQ3VlNjhNZE44ZWFmYk54a2JOWE9ZNGkvNVYreXBLaHBFeWxVeXZIQ2trL1B5UWpkeWliSVhwMTAvNk9rZUI5MVZ4RTc0L1pSNS9QSklnTnBxbDJVdjZUeGViUEdJazJpQ1Rtb2wvNTJKQkNqMzlEbXNkL0hha282QUp3WXhBNkpaZm8zN1REWkVnWkNCVmFuRzcwUCtENXVIc3MvK2FsNFZ2WHZuU2xlQ3haeUExK0FmRGJFZGttWTE5VUxsU083c1VWbS9ramdtUEcvdmplYWIwY3BMUFByOVJUZTAyc2orYlVuK2daKzV5MnhxSysxWS85VHNSQ08vempDSnRBbldraUhTVXdJcGFsSnhJMEN6NkY0d2tVdzBndmdUdVZPS1JjandSQ3FLUkJaUjhyYUVTSUxZcUxmWXNCb1V4VUN5WDZ5c1N1YW5XdE5Zak5aV0RTNFdKQW84MU1BQzZxQ25PSXVWUWxhU0k2d2ZsemJKOEp2dkJhQlJpWktEYlZkT3h1UlRHV005RGhHekRSVTVUdUxTaGlFMWVoanhjY2JaVVA2eTRaeXRWaWEwcmxHVmJtc3dRQWgrSUJqcFcxYk5wZVE5TU5Na21ZQlNUWHhrSmErOWVnTjFiKzhTenJDT3F0eFdtd0J1T0xjUkIyVW0zb2QrcStDYXBWUWNKVjVYenNaWHlmWkFtR2hWVHVBNzFTU0VpL3lVZTFpOThORVJ0SVhkaWxLSUQrWFJMeTEvRE5IYkRHcE5YVXQ1dGJUSk9IUlNaZWdiaTZTbklYUCtLazJVc21sYURrOGg1YlpRc25mMHlnVVdQMlV0YjlCV2dtdmhGSCszanZBR3g3dzdITklrS2g3dXg0TUdCQXVpZ2hkNFA3Q0FqT2ZFbFhIanJFU25oUFRJaXBxb0ZhWDB6WVc4VHhPb3dqNTBRZjBSYnkxN0NjWEFYUExidGVYVjZuVGZaUDdRMHFQb1lYZ1BrMnZOdFNFMWRYek90bkJMVE81cGpBSXpzUTNlZTRCNXhLRk9LK1krc1pBUTVjS2RuVEpQVUZVZDdqdEhWVEw4cVRpTVBWWThRbkVOZUphdll2eis2YVVXVGRGREhGenY3UmdYRGtQa0kxTU8vU1h0TDJzK1VHUUZLWHJzazYrREhrbmt4UTJPelRVZlViMS9landVRjFiTk5vajJBNHdOeU51ZEQwMWt6amtuSjdVNGh5WTZUbytaMEQ3QW9kNEl3VHBscWFOSnI4RTBLZlVaNXlWbHA3MkhBRG1kYzUxQjZHZ3hlY09hUjdVQS83b1oySG94Z0h4TTFveWhvODJnSFNkS2E0OTAzS0VvbkRyb1F6NG84RFAxRXZKODNLanpaRkFvZXFaL0hleGltWG1Ta0xjM2RLMHZZbHprMkpIVHlFbkpGRG1KRVZtNkZaZG9mVUtRb3BUWGUzbkFuVVVvbjBaQUZMaHdsN1NWR2NOd0orU1dpamZOVW9raWhkRmk2MWVkMjNjcFdOR3hGUGkxYmN0VkFBTUhzT0xvalQrdTVURnBRS1hxdE9ZRlE3YUZKOTRSUG9iRU8vakZiQml2M1JIZGRRejRWUjV5Ym0ybFBHWGJPS09sM1ZsdnB5anpqMmdsSU5UbHo3bzhPTWRMMGJwZ0hLVjQ5dWU2ZndRRzNKemx2Tmc5VWhxOWJkTE5jdXJOcTM0dzVuQU05UStQNnlPc0hqVWgyWFJMbzdMS3RrWi9Ca1cwRmFSL1Y4YVE3SzJCL01vVTA0RUZYcFFPMHNudlZZZlZHaW1yK3M5NmhycVVFOFV4Tzc5VWNCRndFVHdEU1RWa092NngvM2lSd25vL21UNHVSK0hYbGR1dk5xclg3MzdXUWRQY2RpMy9uZ2dQQVU5Sk9GdzRXem8zd2EyUFdqeml3WWdjVzhhNzZaRjVjeExsOWZ2UTR2TnZ0S3lsRDV4YTZjMVF3OFRpWDdkakZUUVVTOUswUzFSYnp5OHZIWDZra2VJUmhWVkYrSmd6d2NKTGYzUDd4M0p6WnduR3VsV1poS2dVUVJGdW1iMm1kQkNSZm44Q0JKS0laSnVVdnFLdlo5cUJXeldjQmsrVERFMEVBbXdzPSIsIm1hYyI6ImU4OWMyMDg2YzBkMTIxNzQ3MzI5OTVkZWRhNTE1MWRjYzU0ZmFhZGVmZGY3NmQ2MTk0OWFlYWVjZjc2N2I5Y2YiLCJ0YWciOiIifQ==');

        // dd($encryptedImage);

        $filename = 'signature_' . time() . '.jpeg';
        $filePath = storage_path('app/public/' . $filename);
        file_put_contents($filePath, $encryptedImage);

        return view('dashboard', [
            'imageData' => base64_encode($encryptedImage)
        ]);
    }

    public function decryp(Request $request)
    {
       
        // dd($request->filename);
        // $imageData = file_get_contents('app/public/' . $request->filename);
        $encryptedImage = Storage::get('app/public/' . $request->filename);
        
        $decryptedImage = Crypt::encrypt($encryptedImage);

        $filename = 'descrypted_' . time() . '.jpeg';
        $filePath = storage_path('app/public/' . $filename);
        file_put_contents($filePath, $decryptedImage);

        return redirect()->route('home');
    }
}
